#!/bin/bash
 
red=$(printf "\033[31m")
green=$(printf "\033[32m") 
normal=$(printf "\033[m")

CONCURRENT_CONNECTIONS=2000


if [ -n $1 ]
then
 CONCURRENT_CONNECTIONS=$1
fi 

echo "Trying with $CONCURRENT_CONNECTIONS concurrent connections"


PORT="8080"
LOCAL_IP="127.0.0.1"
AWAY_IP="192.168.20.8"
USED_IP="$LOCAL_IP"

SERVER_TO_TESTLOCAL="$USED_IP:$PORT"  

URI_TO_TEST="logo.png"
#URI_TO_TEST="controlpanel.html"

echo " " > trial1.raw

#First just spam and hangup some telnet sessions Just for fun :)
for i in `seq 1 100`;
do  
 { echo "GET / HTTP/1.1"; echo "Host:  test";  } | telnet "$USED_IP" "$PORT"&
done    


for i in `seq 1 $CONCURRENT_CONNECTIONS`;
do  
# -b 
(time wget --tries=100 --timeout=60 -qO- http://$SERVER_TO_TEST/$URI_TO_TEST > "dosResults/dosResult$i" ) 1> /dev/null 2>> trial1.raw &
done    

echo "Waiting for trial to end"

RUNNING_WGETS=`ps -A | grep wget`

while [ -n "$RUNNING_WGETS" ] 
do 
 sleep 1
 RUNNING_WGETS=`ps -A | grep wget`
done
echo "Trial Ended , Processing output"

cat trial1.raw | grep real| cut -d'	' -f2 | grep -oE "[0-9]\.[0-9][0-9][0-9]"  > trial1.filtered


 

gnuplot <<EOF
set terminal png;
set output "ammarserver.png";
set ylabel "AmmarServer Response Time Seconds";
set xlabel "AmmarServer Requests";
plot "trial1.filtered" using 1 with lines  title "AmmarServer , $URI_TO_TEST , $SERVER_TO_TEST"
EOF


echo "Examining Resulting files"
OK_FILES=0
CORRUPT_FILES=0
for i in `seq 1 $CONCURRENT_CONNECTIONS`;
do   
 
 if [ -e "dosResults/dosResult$i" ]
 then

    TESTDIFF=`diff "dosResults/dosResult$i" "dosResults/dosResult1"`
    if [ -z $TESTDIFF ]
    then 
     OK_FILES=$((OK_FILES+1)) 
    else
     echo "Binary dosResults/dosResult$i is corrupted" 
     CORRUPT_FILES=$((CORRUPT_FILES+1))
    fi
 else
     echo "Binary dosResults/dosResult$i does not even exist" 
     CORRUPT_FILES=$((CORRUPT_FILES+1))  
 fi

done    

echo "Found $OK_FILES correct files"
if [ $CORRUPT_FILES -gt 0 ]
then
echo "$red Found $CORRUPT_FILES corrupt files $normal"
else
echo "$green Everything looks ok $normal"

fi 

 
killall telnet

rm dosResults/dosResult*

 
gpicview ammarserver.png&

echo "Done"

exit 0
